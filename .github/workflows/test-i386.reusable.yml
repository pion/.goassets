# SPDX-FileCopyrightText: 2023 The Pion community <https://pion.ly>
# SPDX-License-Identifier: MIT

name: Test i386 (reusable)
on:
  workflow_call:
    inputs:
      go-version:
        required: true
        type: string

permissions:
  contents: read

jobs:
  test-i386:
    runs-on: ubuntu-latest
    name: Go i386 ${{ inputs.go-version }}
    steps:
      - uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache
          key: ${{ runner.os }}-i386-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-i386-go-

      # Github runners do not support native external IPv6 connectivity:
      #              https://github.com/actions/runner-images/issues/668
      # This customization can be removed after IPv6 is natively supported.
      #
      # Note that `docker create network --ipv6` creates a dual IPv4+IPv6
      # network, because IPv4 is enabled by default.
      - name: Build network
        run: |
          docker network create --ipv6 --subnet=fd43:7516:3e1b::/48 networkWithIPv6

      - name: Run test
        run: |
          if [ -f .github/.ci.conf ]; then . .github/.ci.conf; fi
          if [ -n "${SKIP_i386_TESTS}" ]; then exit 0; fi

          mkdir -p $HOME/go/pkg/mod $HOME/.cache
          docker run \
            -u $(id -u):$(id -g) \
            -e "GO111MODULE=on" \
            -e "CGO_ENABLED=0" \
            -v $GITHUB_WORKSPACE:/go/src/github.com/pion/$(basename $GITHUB_WORKSPACE) \
            -v $HOME/go/pkg/mod:/go/pkg/mod \
            -v $HOME/.cache:/.cache \
            -w /go/src/github.com/pion/$(basename $GITHUB_WORKSPACE) \
            --network=networkWithIPv6 \
            i386/golang:${{inputs.go-version}}-alpine \
            /bin/sh -c "/usr/local/go/bin/go test -bench=. -v ./..."
