name: Generate Authors

on:
  workflow_call:
    inputs:
      goassets-ref:
        default: master
        required: false
        type: string
    secrets:
      token:
        required: true

jobs:
  check-secret:
    name: Check secret
    permissions:
      contents: none
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.head.ref, 'renovate/') == false
    outputs:
      is_token_set: ${{ steps.checksecret_job.outputs.is_token_set }}
    steps:
      - id: checksecret_job
        env:
          TOKEN: ${{ secrets.token }}
        run: |
          echo "is_token_set: ${{ env.TOKEN != '' }}"
          echo "::set-output name=is_token_set::${{ env.TOKEN != '' }}"

  generate-authors:
    name: Generate Authors
    permissions:
      contents: write
    needs: [check-secret]
    if: needs.check-secret.outputs.is_token_set == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
        fetch-depth: 0
        token: ${{ secrets.token }}
      - name: Checkout .goassets
        uses: actions/checkout@v3
        with:
          repository: pion/.goassets
          path: ${{ github.workspace }}/.github/.goassets
          ref: ${{ inputs.goassets-ref }}

      - name: Generate the authors file
        run: .github/.goassets/scripts/generate-authors.sh

      - name: Add the authors file to git
        run: git add AUTHORS.txt

      - name: Get last commit message
        id: last-commit-message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          COMMIT_MSG="${COMMIT_MSG//'%'/'%25'}"
          COMMIT_MSG="${COMMIT_MSG//$'\n'/'%0A'}"
          COMMIT_MSG="${COMMIT_MSG//$'\r'/'%0D'}"
          echo "::set-output name=msg::$COMMIT_MSG"

      - name: Get last commit author
        id: last-commit-author
        run: echo "::set-output name=msg::$(git log -1 --pretty='%aN <%ae>')"

      - name: Check if AUTHORS.txt file has changed
        id: git-status-output
        run: echo "::set-output name=msg::$(git status -s | wc -l)"

      - name: Commit and push
        if: ${{ steps.git-status-output.outputs.msg != '0' }}
        run: |
          git config user.email $(echo "${{ steps.last-commit-author.outputs.msg }}" | sed 's/\(.\+\) <\(\S\+\)>/\2/')
          git config user.name $(echo "${{ steps.last-commit-author.outputs.msg }}" | sed 's/\(.\+\) <\(\S\+\)>/\1/')
          git add AUTHORS.txt
          git commit --amend --no-edit
          git push --force https://github.com/${GITHUB_REPOSITORY} $(git symbolic-ref -q --short HEAD)
