#
# DO NOT EDIT THIS FILE
#
# It is automatically copied from https://github.com/pion/.goassets repository.
# If this repository should have package specific CI config,
# remove the repository name from .goassets/.github/workflows/assets-sync.yml.
#
# If you want to update the shared CI config, send a PR to
# https://github.com/pion/.goassets instead of this repository.
#

name: generate-authors

on:
  pull_request:

jobs:
  checksecret:
    runs-on: ubuntu-latest
    outputs:
      is_PIONBOT_PRIVATE_KEY_set: ${{ steps.checksecret_job.outputs.is_PIONBOT_PRIVATE_KEY_set }}
    steps:
      - id: checksecret_job
        env:
          PIONBOT_PRIVATE_KEY: ${{ secrets.PIONBOT_PRIVATE_KEY }}
        run: |
          echo "is_PIONBOT_PRIVATE_KEY_set: ${{ env.PIONBOT_PRIVATE_KEY != '' }}"
          echo "::set-output name=is_PIONBOT_PRIVATE_KEY_set::${{ env.PIONBOT_PRIVATE_KEY != '' }}"

  generate-authors:
    needs: [checksecret]
    runs-on: ubuntu-latest
    if: github.actor != 'pionbot'
    steps:
    - uses: actions/checkout@v2
      if: needs.checksecret.outputs.is_PIONBOT_PRIVATE_KEY_set == 'true'
      with:
        ref: ${{ github.head_ref }}
        fetch-depth: 0
        token: ${{ secrets.PIONBOT_PRIVATE_KEY }}
    - uses: actions/checkout@v2
      if: needs.checksecret.outputs.is_PIONBOT_PRIVATE_KEY_set != 'true'
      with:
        repository: ${{ github.pull_request.head.repo.full_name }}
        ref: ${{ github.pull_request.head.ref }}
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate the authors file
      run: .github/generate-authors.sh

    - name: Get last commit message
      id: last-commit-message
      run: |
        COMMIT_MSG=$(git log -1 --pretty=%B)
        COMMIT_MSG="${COMMIT_MSG//'%'/'%25'}"
        COMMIT_MSG="${COMMIT_MSG//$'\n'/'%0A'}"
        COMMIT_MSG="${COMMIT_MSG//$'\r'/'%0D'}"
        echo "::set-output name=msg::$COMMIT_MSG"

    - name: Get last commit author
      id: last-commit-author
      run: |
        echo "::set-output name=msg::$(git log -1 --pretty='%aN <%ae>')"

    - name: Check if AUTHORS.txt file has changed
      id: git-status-output
      run: |
        echo "::set-output name=msg::$(git status -s | wc -l)"

    - name: Commit and push
      if: steps.git-status-output.outputs.msg != '0' && needs.checksecret.outputs.is_PIONBOT_PRIVATE_KEY_set == 'true'
      run: |
        git config user.email $(echo "${{ steps.last-commit-author.outputs.msg }}" | sed 's/\(.\+\) <\(\S\+\)>/\2/')
        git config user.name $(echo "${{ steps.last-commit-author.outputs.msg }}" | sed 's/\(.\+\) <\(\S\+\)>/\1/')
        git add AUTHORS.txt
        git commit --amend --no-edit
        git push --force https://github.com/${GITHUB_REPOSITORY} $(git symbolic-ref -q --short HEAD)

    - name: Add annotation about updating AUTHORS.txt
      if: steps.git-status-output.outputs.msg != '0' && needs.checksecret.outputs.is_PIONBOT_PRIVATE_KEY_set != 'true'
      run: |
        line=$(git diff | sed -n '/^@@/s/@@ -\([0-9]\)\+,.*/\1/p' | head -n1)
        patch="$(git diff | sed -s 's/%/%25/g;s/$/%0A/g;' | tr -d '\n')"
        echo "::error file=AUTHORS.txt,line=${line},col=0::Thank you for your contribution @${{ github.actor }}!%0ADo you mind updating AUTHORS.txt as following?%0A%0A${patch}%0A"
